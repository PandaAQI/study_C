void test1()
{
    int arr[10]={1,2,,3,4,5,6,7,8,9,10}
    int sz=sizeof(arr)/size(arr[0])
    bub(arr,sz,sizeof(arr[0]),campar_int)
}


void test2()
{
  struct stu s[]={{"zhang",20},{"li",30},{"wang",20}}
  int sz=sizeof(s)/sizeof(s[0])
  bub(s,sz,sizeof(arr[0]),cmp_stu_by_age)  
}


void bub(void base,int sz,int width,int (*cmp)(void*e1,void*e2))//(变量，长度，类型大小,比较方式)
{
    for(int i=0;i<sz-1,i++)
    {for (int j=0,j<sz-1-i,j++)
    	{
        	if ((cmp(char*)base+j*width,(char*)base+(j+1)*width >0)//转换成char类型，再通过char类型1字节与类型大小字节的关系，确定一个元素与下一个元素的位置
            {
               swap((char*)base+j*width,(char*)base+(j+1)*width)
            }
           
    	}
        
    }
}
                

void swap(char* e1,char*e2,int width)
{
	for(int i=0,i<width;i++)
    {
        char tem =*e1;
        *e1=*e2;
        *e2=tem;
        e1++;
        e2++;
    }
}
                
                
int campar_int(const void* e1,const void* e2)
{
    return *(int*)e1-*(int*)e2;
}
                
int cmp_stu_by_age(const void e1,const void e2)
{
    return  ((struct stu*)e1)->age - ((struct stu*)e2)->age
}
